{"version":3,"sources":["app.js","controllers/mainCtrl.js","controllers/newQuestionCtrl.js","controllers/notFoundCtrl.js","controllers/singleQuestionCtrl.js","directives/option.js","directives/pollBar.js","directives/selfrefresh.js","directives/siteFooter.js","services/appService.js","services/pageService.js","services/questionService.js","services/UITextService.js","services/utilityService.js"],"names":[],"mappings":"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","file":"all.min.js","sourcesContent":["angular.module('yourcall:services', []);\r\nangular.module('yourcall:directives', []);\r\n\r\nangular.module('yourcall:app', ['yourcall:services', 'yourcall:directives', 'ngRoute', 'ngCookies'])\r\n.config(function ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n        .when('/', {\r\n            templateUrl: '/partials/singlequestion.html'\r\n        })\r\n        .when('/ask', {\r\n            templateUrl: '/partials/newquestion.html',\r\n            controller: 'NewQuestionCtrl',\r\n            controllerAs: 'vm'\r\n        })\r\n        .when('/q/:question_url', {\r\n            templateUrl: '/partials/singlequestion.html',\r\n            controller: 'SingleQuestionCtrl',\r\n            controllerAs: 'vm'\r\n        })\r\n        .when('/q/:question_url/result', {\r\n            templateUrl: '/partials/singlequestion.html',\r\n            controller: 'SingleQuestionCtrl',\r\n            controllerAs: 'vm'\r\n        })\r\n        .when('/oops/notfound', {\r\n            templateUrl: '/partials/notfound.html',\r\n            controller: 'NotFoundCtrl',\r\n            controllerAs: 'vm'\r\n        });\r\n\r\n    $locationProvider.html5Mode(true);\r\n})\r\n.run(function ($rootScope, $window, $location) {\r\n    //Google Analytics page tracking\r\n    $rootScope.$on('$viewContentLoaded', function(event) {\r\n        $window.ga('send', 'pageview', { page: $location.path() });\r\n    });\r\n});","angular.module('yourcall:app').controller('MainCtrl', function ($scope, $http, $location, pageService, questionService, utilityService) {\r\n\r\n    $scope.title = pageService.getTitle;\r\n\r\n    questionService.getRandomQuestion().then(function (response) {\r\n        if ($location.path() === '/') {\r\n            $location.path('/q/' + response.data);\r\n        }\r\n    });\r\n\r\n});","angular.module('yourcall:app').controller('NewQuestionCtrl', function ($scope, $location, pageService, questionService, UITextService, appService) {\r\n    \r\n    var vm = this;\r\n\r\n    pageService.setTitle(UITextService.titles.NEW_QUESTION);\r\n\r\n    vm.submitted = false;\r\n    vm.errorMessage = '';\r\n    vm.formData = {};\r\n    vm.formData.isPrivate = false;\r\n\r\n    vm.createQuestion = function () {\r\n        if (vm.formData.title && vm.formData.option_1 && vm.formData.option_2) {\r\n            if (vm.formData.title.length > appService.TITLE_THRESHOLD) {\r\n                vm.errorMessage = UITextService.ERROR_LONG_QUESTION;\r\n            } else if (vm.formData.option_1.length > appService.OPTION_THRESHOLD || vm.formData.option_2.length > appService.OPTION_THRESHOLD) {\r\n                vm.errorMessage = UITextService.ERROR_LONG_OPTION;\r\n            } else {\r\n                vm.submitted = true;\r\n                vm.errorMessage = '';\r\n\r\n                questionService.createQuestion(vm.formData).success(function (data) {\r\n                    vm.formData = {};\r\n                    vm.newQuestion = data;\r\n                    $location.path('/q/' + data.url);\r\n                });\r\n            }\r\n        } else {\r\n            vm.errorMessage = UITextService.ERROR_FIELDS_EMPTY;\r\n        }\r\n    };\r\n\r\n});","angular.module('yourcall:app').controller('NotFoundCtrl', function ($scope, questionService) {\r\n    \r\n    var vm = this;\r\n\r\n    questionService.getRandomQuestion().then(function (response) {\r\n        vm.questionUrl = response.data;\r\n    });\r\n\r\n});","angular.module('yourcall:app').controller('SingleQuestionCtrl', function ($scope, $routeParams, $location, questionService, UITextService) {\r\n\r\n    var vm = this;\r\n\r\n    vm.showResult = false;\r\n\r\n    if($location.$$path.indexOf('result') > -1) {\r\n        vm.showResult = true;\r\n    }\r\n\r\n    vm.reportMessage = UITextService.REPORT;\r\n    vm.deleteMessage = UITextService.DELETE;\r\n\r\n    if($routeParams.question_url) {\r\n        questionService.getQuestion($routeParams.question_url).success(function (question) {\r\n            vm.question = question;\r\n            vm.isOwnedQuestion = question.owned;\r\n            vm.totalVotes = question.totalVotes;\r\n        });\r\n    }\r\n\r\n    questionService.getRandomQuestion().success(function (url) {\r\n        vm.nextQuestion = url;\r\n    });\r\n\r\n    vm.deleteQuestion = function (questionId) {\r\n        vm.deleteMessage = UITextService.PENDING_DELETE;\r\n\r\n        questionService.deleteQuestion(questionId).success(function (question) {\r\n            $location.path('/q/' + vm.nextQuestion);\r\n        });\r\n    };\r\n\r\n    vm.vote = function (question, vote) {\r\n        if(!question.hasVoted) {\r\n            questionService.voteOnQuestion(question, vote).success(function (response) {\r\n                vm.totalVotes = question.option_1_votes + question.option_2_votes;\r\n            });\r\n        }\r\n    };\r\n\r\n    vm.reportQuestion = function (id) {\r\n        vm.reportMessage = UITextService.REPORTED;\r\n        questionService.reportQuestion(id);\r\n    };\r\n});","angular.module('yourcall:directives').directive('option', function () {\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/directives/option.html',\r\n        scope: {\r\n            \r\n        },\r\n        link: function(scope, element, attrs) {\r\n\r\n        }\r\n    }\r\n});","angular.module('yourcall:directives').directive('pollBar', function($timeout, appService) {\r\n\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            voted: '@',\r\n            showResult: '='\r\n        },\r\n        link: function(scope, element, attrs) {\r\n\r\n            var result1    = document.getElementById('result-1'),\r\n                result2    = document.getElementById('result-2'),\r\n                option1    = document.querySelector('.option-1'),\r\n                option2    = document.querySelector('.option-2'),\r\n                nextButton = document.getElementById('next-button'),\r\n                result1Value,\r\n                result2Value;\r\n\r\n            var setBarHeights = function () {\r\n                result1Value = result1.textContent.replace('%', '') + 'vh',\r\n                result2Value = result2.textContent.replace('%', '') + 'vh';\r\n\r\n                option1.style.height = result1Value;\r\n                option2.style.height = result2Value;\r\n            };\r\n\r\n            var showPercentages = function () {\r\n                result1.classList.add('show-percentage');\r\n                result2.classList.add('show-percentage');\r\n            };\r\n\r\n            var nextQuestionCTA = function () {\r\n                nextButton.classList.add('shake-rotate');\r\n            };\r\n\r\n            var displayResult = function () {\r\n                $timeout(setBarHeights, 100);\r\n\r\n                $timeout(showPercentages, appService.DISPLAY_PERCENTAGES_DELAY);\r\n\r\n                $timeout(nextQuestionCTA, appService.DISPLAY_BUTTON_ANIMATION_DELAY);\r\n            };\r\n\r\n            if(!scope.showResult) {\r\n                scope.$watch('voted', function(hasVoted) {\r\n                    if (hasVoted) {\r\n                        displayResult();\r\n                    } else {\r\n                        element.on('click', displayResult);\r\n                    }\r\n                });\r\n            } else {\r\n                displayResult();\r\n            }\r\n        }\r\n    }\r\n});","angular.module('yourcall:directives').directive('selfRefresh', function($location, $route){\r\n    return function(scope, element, attrs) {\r\n        element.bind('click',function(){\r\n            if(element[0] && element[0].href && element[0].href === $location.absUrl()){\r\n                $route.reload();\r\n            }\r\n        });\r\n    }   \r\n});","angular.module('yourcall:directives').directive('siteFooter', function ($rootScope, $location) {\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/partials/directives/sitefooter.html',\r\n        link: function(scope, element, attrs) {\r\n            $rootScope.$on('$routeChangeSuccess', function () {\r\n                if($location.path().indexOf('notfound') > -1) {\r\n                    element.addClass('hidden');\r\n                } else {\r\n                    element.removeClass('hidden');\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","angular.module('yourcall:services').factory('appService', function () {\r\n\r\n    var appService = {\r\n        cookieNames: {\r\n            OWNED_QUESTIONS: 'own_q',\r\n            VOTES: 'votes'\r\n        },\r\n        TITLE_THRESHOLD: 37,\r\n        OPTION_THRESHOLD: 50,\r\n        DISPLAY_PERCENTAGES_DELAY: 1500,\r\n        DISPLAY_BUTTON_ANIMATION_DELAY: 5000\r\n    };\r\n\r\n    return appService;\r\n});","angular.module('yourcall:services').factory('pageService', function (UITextService){\r\n\r\n    var pageService = {};\r\n\r\n    var title = UITextService.BASE_PAGE_TITLE;\r\n\r\n    pageService.getTitle = function () {\r\n        return title;\r\n    };\r\n\r\n    pageService.setTitle = function (pageTitle) {\r\n        title = UITextService.titles.QUESTION_PAGE_TITLE + pageTitle;\r\n    };\r\n\r\n    return pageService;\r\n});","angular.module('yourcall:services').factory('questionService',function ($http, $location, $window, UITextService, utilityService, appService, pageService) {\r\n    var questionService = {};\r\n\r\n    questionService.fetchedQuestions = [];\r\n\r\n    /**\r\n     * Returns a random question from the questions API.\r\n     * @return {promise} representing a question object\r\n     */\r\n    questionService.getRandomQuestion = function () {\r\n        return $http.get('/api/random');\r\n    };\r\n\r\n    /**\r\n     * Deletes the question with [questionID] from the\r\n     * server and returns a new random question.\r\n     * @param  {number} questionId\r\n     * @return {promise} representing a question object\r\n     */\r\n    questionService.deleteQuestion = function (questionId) {\r\n        var confirmDelete = $window.confirm(UITextService.CONFIRMATION_MESSAGE);\r\n        var ownershipToken = '';\r\n\r\n        if (confirmDelete) {\r\n            if (utilityService.readCookie(appService.cookieNames.OWNED_QUESTIONS)) {\r\n                var owned = utilityService.readCookie(appService.cookieNames.OWNED_QUESTIONS).split('|');\r\n\r\n                /*owned.forEach(function (token) {\r\n                    if (questionId === owned[i].split(':')[0]) {\r\n                        ownershipToken = owned[i].split(':')[1];\r\n                    }\r\n                });*/\r\n\r\n                for(var i = 0; i < owned.length; i++) {\r\n                    if (questionId === owned[i].split(':')[0]) {\r\n                        ownershipToken = owned[i].split(':')[1];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return $http.delete('/api/delete/' + questionId + '?verify=' + ownershipToken);\r\n        }\r\n    };\r\n\r\n    questionService.getQuestion = function (questionUrl) {\r\n        var ownedQuestions = '',\r\n            votedQuestions = utilityService.readCookie(appService.cookieNames.VOTES);\r\n\r\n        if (utilityService.readCookie(appService.cookieNames.OWNED_QUESTIONS)) {\r\n            var owned = utilityService.readCookie(appService.cookieNames.OWNED_QUESTIONS).split('|');\r\n\r\n            for (var i = 0; i < owned.length; i++) {\r\n                ownedQuestions += ':' + owned[i].split(':')[0];\r\n            }\r\n        }\r\n\r\n        return $http.get('/api/questions/' + questionUrl)\r\n            .success(function (question) {\r\n                pageService.setTitle(question.title);\r\n                \r\n                if (votedQuestions && votedQuestions.indexOf(question.url) > -1) {\r\n                    question.hasVoted = true;\r\n                }\r\n\r\n                if (ownedQuestions.indexOf(question._id) > -1) {\r\n                    question.owned = true;\r\n                }\r\n\r\n                question.totalVotes = question.option_1_votes + question.option_2_votes;\r\n            })\r\n            .error(function () {\r\n                $location.path('/oops/notfound');\r\n            });\r\n    };\r\n\r\n    questionService.voteOnQuestion = function (question, vote) {\r\n        return $http.put('/api/vote/' + question.url + '/' + vote).success(function (data) {\r\n            if (data.success === 'true') {\r\n                question['option_' + vote + '_votes'] += 1;\r\n                question.hasVoted = true;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Modifies the question, setting the reported flag to true.\r\n     * @param  {number} questionId \r\n     * @return {undefined}\r\n     */\r\n    questionService.reportQuestion = function (questionId) {\r\n        $http.put('/api/report/' + questionId);\r\n    };\r\n\r\n    questionService.createQuestion = function (newQuestion) {\r\n        return $http.post('/api/questions', newQuestion);\r\n    };\r\n\r\n    questionService.getAllQuestions = function () {\r\n        return $http.get('/api/questions');\r\n    };\r\n\r\n    questionService.getReportedQuestions = function () {\r\n        return $http.get('/api/reported');\r\n    };\r\n\r\n    return questionService;\r\n});","angular.module('yourcall:services').factory('UITextService', function () {\r\n\r\n    var UITextService = {\r\n        titles: {\r\n            BASE_PAGE_TITLE: 'YourCall.io',\r\n            QUESTION_PAGE_TITLE: 'Your Call: ',\r\n            NEW_QUESTION: 'Ask a question'\r\n        },\r\n        CONFIRMATION_MESSAGE: 'Are you sure?',\r\n        DELETE: 'Delete',\r\n        PENDING_DELETE: 'Deleting...',\r\n        REPORT: 'Report',\r\n        REPORTED: 'Flagged for review',\r\n        ERROR_LONG_QUESTION: 'Please try to shorten your question.',\r\n        ERROR_LONG_OPTION: 'Please try to shorten your options.',\r\n        ERROR_FIELDS_EMPTY: 'Please fill in all fields.'\r\n    };\r\n\r\n    return UITextService;\r\n});","angular.module('yourcall:services').factory('utilityService', function ($cookies) {\r\n\r\n    var utilityService = {};\r\n\r\n    utilityService.readCookie = function (name) {\r\n        var nameEQ = name + '=';\r\n        var ca = document.cookie.split(';');\r\n\r\n        for (var i=0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0)==' ') c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return utilityService;\r\n});"],"sourceRoot":"/source/"}